<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements. See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd">
		
	<!-- Set up the AmqpTemplate/RabbitTemplate: -->
	<rabbit:template id="amqpTemplate" connection-factory="rabbitConnectionFactory" reply-timeout="10000" />

	<!-- Channel to handle new payments requests from mifos-->
	<int:channel id="paymentEventChannel"/>
	<int:channel id="paymentRequestChannel"/>
	<int:channel id="paymentJSONChannel"/>

	<bean id="rabbitConnectionFactory" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory">
			<constructor-arg value="localhost" />
			<property name="username" value="guest" />
			<property name="password" value="guest" />
	</bean>
	
	<int:header-enricher input-channel="paymentEventChannel" output-channel="paymentRequestChannel">
		<int:header name="PAYMENT_ID" expression="payload.getPaymentId()"/>
		<int:header name="TENANT_ID" expression="payload.getTenantId()"/>
	</int:header-enricher>

	<int:object-to-json-transformer input-channel="paymentRequestChannel" output-channel="paymentJSONChannel" content-type="text/x-json"/>
	
		
    <!-- Request that queues, exchanges and bindings be automatically declared
		on the broker: -->
	<rabbit:admin id="mobileMoneyAMQPAdmin" connection-factory="rabbitConnectionFactory" />
		
    <!--  To send AMQP Messages to an Exchange, configure an outbound-channel-adapter. -->
	<int-amqp:outbound-channel-adapter
		channel="paymentJSONChannel" 
		exchange-name="new-payment-events-exchange"
		routing-key-expression="'request.'+headers.NUMBER"
		amqp-template="amqpTemplate" />

	<!-- rabbit exchanges, queues, and bindings used by this app -->
	<rabbit:topic-exchange name="new-payment-events-exchange" auto-delete="false" durable="true">
		<rabbit:bindings>
		    <rabbit:binding queue="fineract.payment.new" pattern="request.*"/>
			<rabbit:binding queue="fineract.payment.new.received-ack" pattern="ack.*"/>
			<rabbit:binding queue="fineract.payment.new.process-complete" pattern="callback.*"/>
		</rabbit:bindings>
	</rabbit:topic-exchange>

	<rabbit:queue name="fineract.payment.new" auto-delete="false" durable="true" />
	<rabbit:queue name="fineract.payment.new.received-ack" auto-delete="false" durable="true" />
	<rabbit:queue name="fineract.payment.new.process-complete" auto-delete="false" durable="true" />

	<!-- Service gateway endpoint from mifos-->
	<int:gateway service-interface="org.apache.fineract.infrastructure.paymentgateway.service.PaymentGateway"
		default-request-channel="paymentEventChannel">
		<int:method name="processPayment" />
	</int:gateway>

	

</beans>
